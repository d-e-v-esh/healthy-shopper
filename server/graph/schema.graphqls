# GraphQL schema example
#
# https://gqlgen.com/getting-started/

type User {
  UserID: ID!
  Username: String!
  EmailAddress: String!
  Password: String!
  FirstName: String!
  LastName: String!
  CreatedAt: String!
  UpdatedAt: String!
}

type UserAddress {
  UserID: ID!
  AddressID: ID!
  IsDefault: Boolean!
}

type Address {
  AddressID: ID!
  PhoneNumber: String!
  AddressLine1: String!
  AddressLine2: String!
  City: String!
  State: String!
  PINCode: String!
}

type Product {
  ProductID: ID!
  ProductCategoryID: ID!
  Name: String!
  Description: String!
  ProductImage: String!
  IngredientsListID: ID!
  NutritionalInformationID: ID!
  PromotionID: ID!
  CreatedAt: String!
  UpdatedAt: String!
}

type ProductItem {
  ProductItemID: ID!
  ProductID: ID!
  StockKeepingUnit: String!
  QuantityInStock: Int!
  ProductImage: String!
  Price: Float!
}

type NutritionalInformation {
  NutritionalInformationID: ID!
  NutritionalInformationListID: ID!
  NAmount: Int!
  MeasuringUnit: String!
}

type NutritionalInformationList {
  NutritionalInformationListID: ID!
  Parameter: String!
  PerNAmount: Float!
  MeasuringUnit: String!
}

type IngredientsList {
  IngredientsListID: ID!
  Name: String!
  Description: String!
}

type ProductCategory {
  ProductCategoryID: ID!
  ParentCategoryID: ID!
  CategoryName: String!
}

type ProductConfiguration {
  ProductItemID: ID!
  VariationOptionID: ID!
}

type Variation {
  VariationID: ID!
  ProductCategoryID: ID!
  Name: String!
}

type VariationOption {
  VariationOptionID: ID!
  VariationID: ID!
  Value: String!
}

type Promotion {
  PromotionID: ID!
  Name: String!
  Description: String!
  DiscountRate: Int!
  StartDate: String!
  EndDate: String!
}

type ShoppingCart {
  ShoppingCartID: ID!
  UserID: ID!
}

type ShoppingCartItem {
  ShoppingCartItemID: ID!
  ShoppingCartID: ID!
  ProductItemID: ID!
  Quantity: Int!
}

type ShopOrder {
  ShopOrderID: ID!
  UserID: ID!
  OrderDateAndTime: String!
  PaymentMethod: String!
  ShippingAddressID: ID!
  ShippingMethodID: ID!
  OrderTotal: Float!
  OrderStatusID: ID!
}

type ShippingAddressID {
  ShippingAddressID: ID!
  PhoneNumber: String!
  AddressLine1: String!
  AddressLine2: String!
  City: String!
  State: String!
  PINCode: String!
}

type ShippingMethod {
  ShippingMethodID: ID!
  Name: String!
  Price: Float!
}

type OrderStatus {
  OrderStatusID: ID!
  Status: String!
}

type OrderLine {
  OrderLineID: ID!
  ProductItemID: ID!
  ShopOrderID: ID!
  Quantity: Int!
  Price: Float!
}

type UserReview {
  UserReviewID: ID!
  UserID: ID!
  OrderedProductID: ID!
  RatingValue: Int!
  Comment: String!
}

type Query {
  users: [User!]!
  products: [Product!]!
}

type Mutation {
  createUser(input: NewUser!): User!
  createProduct(input: NewProduct!): Product!
}

input NewUser {
  Username: String!
  EmailAddress: String!
  Password: String!
  FirstName: String!
  LastName: String!
}

input NewProduct {
  ProductCategoryID: ID
  Name: String!
  Description: String!
  ProductImage: String!
  IngredientsListID: ID
  NutritionalInformationID: ID
  PromotionID: ID
}

# type Todo {
#   id: ID!
#   text: String!
#   done: Boolean!
#   user: User!
# }

# type User {
#   id: ID!
#   name: String!
# }

# type Query {
#   todos: [Todo!]!
# }

# input NewTodo {
#   text: String!
#   userId: String!
# }

# type Mutation {
#   createTodo(input: NewTodo!): Todo!
# }
